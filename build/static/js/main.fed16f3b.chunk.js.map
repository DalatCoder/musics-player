{"version":3,"sources":["components/MusicInfo.js","components/MusicCover.js","apis/zingmp3.js","utils/index.js","actions/index.js","components/MusicControl.js","components/Audio.js","components/MusicPlayer.js","components/search-bar/suggestBox.js","components/search-bar/searchBar.js","components/App.js","reducers/index.js","index.js"],"names":["MusicInfo","className","this","props","song","title","style","width","progressPercent","React","Component","connect","state","currentSong","src","cover","alt","axios","create","baseURL","formatDuration","time","mins","Math","floor","secs","formatted","toString","normalizeVietnameseString","string","normalize","replace","playSong","type","pauseSong","MusicControl","onPlaySong","onPauseSong","playing","onClick","isPlaying","togglePlayButton","MusicAudio","audio","Audio","addEventListener","calcCurrentProgress","duration","currentTime","play","pause","payload","SuggestBox","onSongClick","selectSong","hideSuggestBox","songs","map","key","id","artist","console","log","fetchedSongs","SearchBar","term","onSearchSubmit","event","preventDefault","fetchSongs","setState","showSuggest","onSubmit","autoComplete","placeholder","spellCheck","value","onChange","e","target","onFocus","showSuggestBox","dispatch","a","zingmp3","get","response","data","formattedSongs","name","coverURL","thumb","App","INITIAL_SONG","author","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.fed16f3b.chunk.js","sourcesContent":["import './MusicInfo.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass MusicInfo extends React.Component {\n  render() {\n    return (\n      <div className=\"music-info\">\n        <h4>{this.props.song.title}</h4>\n        <div className=\"progress-container\">\n          <div\n            className=\"progress\"\n            style={{ width: `${this.props.progressPercent}%` }}\n          ></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { song: state.currentSong, progressPercent: state.progressPercent };\n};\n\nexport default connect(mapStateToProps)(MusicInfo);\n","import './MusicCover.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst MusicCover = props => {\n  const { song } = props;\n\n  return (\n    <div className=\"img-container\">\n      <img src={song.cover} alt={`${song.title} cover`} />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { song: state.currentSong };\n};\n\nexport default connect(mapStateToProps)(MusicCover);\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://dalatcoder-mp3-app.herokuapp.com'\n});\n","export function getAudioURL(id) {\n  return `http://api.mp3.zing.vn/api/streaming/audio/${id}/320`;\n}\n\nexport function getCoverURL(coverURL) {\n  return 'https://photo-resize-zmp3.zadn.vn/w480_r1x1_jpeg/' + coverURL;\n}\n\nexport function getQueryURL(songTitle) {\n  const proxy = 'https://cors-anywhere.herokuapp.com/';\n  const url = `http://ac.mp3.zing.vn/complete?type=artist,song,key,code&num=500&query=${songTitle}`;\n  return proxy + url;\n}\n\nexport function formatDuration(time) {\n  const mins = Math.floor(time / 60);\n  const secs = time % 60;\n\n  let formatted = '';\n\n  if (mins < 10) {\n    formatted += '0';\n  }\n  formatted += mins.toString();\n\n  formatted += ':';\n\n  if (secs < 10) {\n    formatted += '0';\n  }\n  formatted += secs.toString();\n\n  return formatted;\n}\n\nexport function normalizeVietnameseString(string) {\n  return string\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/đ/g, 'd')\n    .replace(/Đ/g, 'D');\n}\n","import zingmp3 from '../apis/zingmp3';\nimport { getAudioURL, getCoverURL, formatDuration } from '../utils';\n\nexport const playSong = () => {\n  return {\n    type: 'PLAYING'\n  };\n};\n\nexport const pauseSong = () => {\n  return {\n    type: 'PAUSING'\n  };\n};\n\nexport const selectSong = song => {\n  return {\n    type: 'SONG_SELECTED',\n    payload: song\n  };\n};\n\nexport const calcCurrentProgress = (duration, currentTime) => {\n  return {\n    type: 'CURRENT_PROGRESS',\n    payload: (currentTime * 100) / duration\n  };\n};\n\nexport const hideSuggestBox = () => {\n  return {\n    type: 'HIDE_SUGGEST_BOX'\n  };\n};\n\nexport const showSuggestBox = () => {\n  return {\n    type: 'SHOW_SUGGEST_BOX'\n  };\n};\n\nexport const fetchSongs = title => async dispatch => {\n  const response = await zingmp3.get(`/${title}`);\n\n  const songs = response.data.data || [];\n\n  const formattedSongs = songs.map(song => {\n    return {\n      title: song.name,\n      cover: getCoverURL(song.thumb),\n      src: getAudioURL(song.id),\n      artist: song.artist,\n      duration: formatDuration(song.duration),\n      id: song.id\n    };\n  });\n\n  dispatch({ type: 'FETCH_SONGS', payload: formattedSongs });\n};\n","import './MusicControl.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { playSong, pauseSong } from '../actions';\n\nclass MusicControl extends React.Component {\n  onPlaySong = () => {\n    this.props.playSong();\n  };\n\n  onPauseSong = () => {\n    this.props.pauseSong();\n  };\n\n  togglePlayButton(playing) {\n    if (playing) {\n      return (\n        <button\n          className=\"action-btn action-btn-big\"\n          onClick={this.onPauseSong}\n        >\n          <i className=\"fas fa-pause\"></i>\n        </button>\n      );\n    }\n    return (\n      <button className=\"action-btn action-btn-big\" onClick={this.onPlaySong}>\n        <i className=\"fas fa-play\"></i>\n      </button>\n    );\n  }\n\n  render() {\n    const { isPlaying } = this.props;\n\n    return (\n      <div className=\"navigation\">\n        <button className=\"action-btn\">\n          <i className=\"fas fa-backward\"></i>\n        </button>\n        {this.togglePlayButton(isPlaying)}\n        <button className=\"action-btn\">\n          <i className=\"fas fa-forward\"></i>\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { isPlaying: state.isPlaying };\n};\n\nexport default connect(mapStateToProps, { playSong, pauseSong })(MusicControl);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { pauseSong, calcCurrentProgress } from '../actions';\n\nclass MusicAudio extends React.Component {\n  audio = new Audio(this.props.song.src);\n\n  componentDidMount() {\n    this.audio.addEventListener('ended', () => this.props.pauseSong());\n    this.audio.addEventListener('timeupdate', () => {\n      this.props.calcCurrentProgress(\n        this.audio.duration,\n        this.audio.currentTime\n      );\n    });\n  }\n\n  render() {\n    this.audio.src = this.props.song.src;\n\n    if (this.props.isPlaying) {\n      this.audio.play();\n    } else {\n      this.audio.pause();\n    }\n    return null;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { song: state.currentSong, isPlaying: state.isPlaying };\n};\n\nexport default connect(mapStateToProps, {\n  pauseSong,\n  calcCurrentProgress\n})(MusicAudio);\n","import './MusicPlayer.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport MusicInfo from './MusicInfo';\nimport MusicCover from './MusicCover';\nimport MusicControl from './MusicControl';\nimport Audio from './Audio';\n\nconst MusicPlayer = props => {\n  return (\n    <div className={`music-container ${props.isPlaying ? 'play' : ''}`}>\n      <MusicInfo />\n\n      <Audio />\n\n      <MusicCover />\n\n      <MusicControl />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { isPlaying: state.isPlaying };\n};\n\nexport default connect(mapStateToProps)(MusicPlayer);\n","import './suggestBox.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong, playSong, hideSuggestBox } from '../../actions';\n\nclass SuggestBox extends React.Component {\n  onSongClick = song => {\n    this.props.selectSong(song);\n    this.props.playSong();\n    this.props.hideSuggestBox();\n  };\n\n  render() {\n    return this.props.songs.map(song => {\n      return (\n        <div className=\"song\" key={song.id}>\n          <div className=\"song-photo\">\n            <img src={song.cover} alt={`${song.title} cover`} />\n          </div>\n          <div className=\"song-info\">\n            <div className=\"title\">\n              <p onClick={() => this.onSongClick(song)}>{song.title}</p>\n            </div>\n            <div className=\"artist\">\n              <span>{song.artist}</span>\n            </div>\n          </div>\n          <div className=\"song-duration\">\n            <span>{song.duration}</span>\n          </div>\n        </div>\n      );\n    });\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return { songs: state.fetchedSongs };\n};\n\nexport default connect(mapStateToProps, {\n  selectSong,\n  playSong,\n  hideSuggestBox\n})(SuggestBox);\n","import './searchBar.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSongs, showSuggestBox } from '../../actions';\nimport SuggestBox from './suggestBox';\nimport { normalizeVietnameseString } from '../../utils';\n\nclass SearchBar extends React.Component {\n  state = { term: '' };\n\n  onSearchSubmit = event => {\n    event.preventDefault();\n    this.props.fetchSongs(normalizeVietnameseString(this.state.term));\n    this.setState({ term: '' });\n  };\n\n  render() {\n    return (\n      <div\n        className={`search-container ${\n          this.props.showSuggest ? 'show-suggest' : ''\n        }`}\n      >\n        <form className=\"form\" onSubmit={this.onSearchSubmit}>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Nhập tên bài hát\"\n            spellCheck=\"false\"\n            value={this.state.term}\n            onChange={e => this.setState({ term: e.target.value })}\n            onFocus={() => this.props.showSuggestBox()}\n          />\n\n          <button type=\"submit\" className=\"btn\">\n            <i className=\"fas fa-search\"></i>\n          </button>\n        </form>\n\n        <div className=\"suggest\">\n          <SuggestBox />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    showSuggest: state.showSuggest\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchSongs,\n  showSuggestBox\n})(SearchBar);\n","import './App.css';\nimport React from 'react';\n\nimport MusicPlayer from './MusicPlayer';\nimport SearchBar from './search-bar/searchBar';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <SearchBar />\n      <MusicPlayer />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nconst playStatusReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'PLAYING':\n      return true;\n\n    case 'PAUSING':\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst INITIAL_SONG = {\n  title: 'Ukulele',\n  cover: 'assets/images/ukulele.jpg',\n  src: 'assets/music/ukulele.mp3',\n  author: 'unknown',\n  duration: 'unknown'\n};\nconst songReducer = (state = INITIAL_SONG, action) => {\n  switch (action.type) {\n    case 'SONG_SELECTED':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nconst progressReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'CURRENT_PROGRESS':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nconst songsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_SONGS':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nconst suggestBoxReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'HIDE_SUGGEST_BOX':\n      return false;\n\n    case 'SHOW_SUGGEST_BOX':\n      return true;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  isPlaying: playStatusReducer,\n  currentSong: songReducer,\n  progressPercent: progressReducer,\n  fetchedSongs: songsReducer,\n  showSuggest: suggestBoxReducer\n});\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}